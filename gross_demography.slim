// set up a simple neutral simulation
initialize() {
	initializeTreeSeq();
	
	initializeMutationRate(0.0); // no mutation of selected alleles
	
	if (!exists("s")){
		defineConstant("s", 0.1);}
	
	if (!exists("sampleSize")){
		defineConstant("sampleSize", 4);}
	
	if (!exists("selPop")){
		defineGlobal("selPop", 2);}
	
	if (!exists("selTime")){
		defineConstant("selTime", 500);}
	
	if (!exists("cF")){
		defineConstant("cF", 0.1);}
	
	
	// m1 mutation type: selected mutation
	initializeMutationType("m1", 0.5, "f", s);
	m1.color="pink";
	
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0);
	
	// uniform chromosome of length 100 kb with uniform recombination
	initializeGenomicElement(g1, 0, 9999999);
	initializeRecombinationRate(1e-7);
}

// create a population of 500 individuals
1 late() {
	sim.readFromPopulationFile("~/Documents/arg_selection/gross_burnin.trees");
}

2 early(){
	sim.addSubpopSplit("p1", asInteger(p0.individualCount/2), p0);
}


500 late(){
	sim.addSubpopSplit("p2", asInteger(p1.individualCount/2), p1);

}

late(){
	if (sim.cycle==selTime){
		selInd=sample(sim.subpopulations[selPop].individuals, 1);
		selInd.genomes.addNewDrawnMutation(m1, 5e6, originSubpop=selPop);
	}
	
	if(sim.cycle%500==499.0){
		for (p in sim.subpopulations){
			rInd=sample(p.individuals, sampleSize);
			sim.treeSeqRememberIndividuals(rInd);
		}
	}
	
	if (s>0.0){if (sim.cycle>selTime){
			if(size(sim.mutationFrequencies(sim.subpopulations[selPop]))==0){
				sim.readFromPopulationFile("~/Documents/arg_selection/gross_burnin.trees");
			}
		}
	}
}

//1000 late(){
//sim.addSubpopSplit("p12", asInteger(p1.individualCount/2), p1);
//sim.addSubpopSplit("p22", asInteger(p2.individualCount/2), p2);
//
//}
// output samples of 10 genomes periodically, all fixed mutations at end
1000 late(){
	if (s>0.0){
		if (sim.mutationFrequencies(sim.subpopulations[selPop]) >= cF){
			
			sim.treeSeqOutput(paste0("~/Documents/arg_selection/simtree_p",selPop,"_t",selTime,"_s",s,"_f",cF, "_sS",sampleSize,".trees"));
		} else{
			sim.readFromPopulationFile("~/Documents/arg_selection/gross_burnin.trees");
		}
	}
}
